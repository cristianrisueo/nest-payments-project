version: '3.8'

services:
  # MongoDB database for users
  users_db:
    image: mongo:8.0
    container_name: users_mongodb
    restart: unless-stopped
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: users123
      MONGO_INITDB_DATABASE: users_db
    volumes:
      - users_mongodb_data:/data/db
    networks:
      - payments_network

  # MongoDB database for payments
  payments_db:
    image: mongo:8.0
    container_name: payments_mongodb
    restart: unless-stopped
    ports:
      - '27018:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: payments123
      MONGO_INITDB_DATABASE: payments_db
    volumes:
      - payments_mongodb_data:/data/db
    networks:
      - payments_network

  # Payments API Application
  payments_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: payments_api
    restart: unless-stopped
    environment:
      # Database Configuration
      USERS_DB_URL: mongodb://admin:users123@users_db:27017/users_db?authSource=admin
      PAYMENTS_DB_URL: mongodb://admin:payments123@payments_db:27017/payments_db?authSource=admin

      # JWT Configuration
      JWT_SECRET: your-super-secret-production-key-change-this
      JWT_EXPIRES_IN: 24h

      # Application Configuration
      PORT: 3000
      NODE_ENV: production
    ports:
      - '3000:3000'
    depends_on:
      - users_db
      - payments_db
    networks:
      - payments_network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  users_mongodb_data:
    driver: local
  payments_mongodb_data:
    driver: local

networks:
  payments_network:
    driver: bridge
